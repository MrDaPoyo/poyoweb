user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
}

http {
    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 80;
        server_name dns.119844.xyz *.poyoweb.me poyoweb.me www.poyoweb.me;
        return 301 https://$host$request_uri; # Redirect HTTP to HTTPS
    }

	server {
		listen 443 ssl;
		server_name dns.119844.xyz 119844.xyz;

		ssl_certificate /etc/letsencrypt/live/dns.119844.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dns.119844.xyz/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            proxy_pass http://localhost:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
	}
	
    server {
        listen 443 ssl;
        server_name poyoweb.me www.poyoweb.me *.poyoweb.me;

        ssl_certificate /etc/letsencrypt/live/poyoweb.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/poyoweb.me/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            proxy_pass http://localhost:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location /images/ {
            alias /usr/share/nginx/html/images/;
        }

        error_page 502 = @maintenance;
        error_page 503 = @maintenance;
        error_page 504 = @maintenance;

        location @maintenance {
            root /usr/share/nginx/html;
            rewrite ^ /maintenance.html break;
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    map "$ssl_server_name" $domain_name { ~(.*)\.(.*)\.(.*)$ $2.$3; }
    
    server {
    	listen  443;
        server_name  server_name _;
    
        ssl_certificate /etc/letsencrypt/live/$domain_name.crt;
        ssl_certificate_key /etc/letsencrypt/live/$domain_name.key;
	
	    # Default location
	    location / {
			proxy_pass http://localhost:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
	    }
	
	    # SSL settings
	    ssl_protocols TLSv1.2 TLSv1.3;
	    ssl_ciphers HIGH:!aNULL:!MD5;
	
	    # Prevent SSL errors for unknown domains
	    ssl_reject_handshake on;
	}
	
	# Redirect HTTP to HTTPS
	server {
	    listen 80;
	    server_name _;
	
	    location / {
	        return 301 https://$host$request_uri;
	    }
	}
}
