user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
}

http {
    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    ##
    # Reverse Proxy for Wildcard Domains
    ##
    server {
        listen 80 ssl;
        server_name poyoweb.me *.poyoweb.me 212.93.230.18;

		ssl_certificate /etc/nginx/ssl/cloudflare-origin.crt;
		ssl_certificate_key /etc/nginx/ssl/cloudflare-origin.key;
    	ssl_protocols TLSv1.2 TLSv1.3;
    	ssl_ciphers HIGH:!aNULL:!MD5;
    	ssl_prefer_server_ciphers on;
    	
        location / {
            proxy_pass http://localhost:8080;  # Adjust to your backend port
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Allow all sources (domains)
            proxy_set_header Access-Control-Allow-Origin *;
        }

        location /images/ {
            alias /usr/share/nginx/html/images/;  # Serve images
        }

        # Custom Maintenance Pages
        error_page 502 = @maintenance;
        error_page 503 = @maintenance;
        error_page 504 = @maintenance;

        location @maintenance {
            root /usr/share/nginx/html;  # Maintenance page directory
            rewrite ^ /maintenance.html break;
            internal;
        }

        # Generic Error Page
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
